name: Node.js CI/CD Pipeline for CyberMusik

on:
  push:
    branches:
      - main  # Ejecuta el pipeline en cada push a la rama main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Ajusta a la versión de Node.js que usas en CyberMusik

      - name: Install Dependencies
        run: npm install

      - name: Lint Code
        run: npm run lint

      - name: Run Tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Deploy to Production
        env:
          NODE_ENV: production
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          # Aquí añade el comando específico para desplegar CyberMusik.
          # Por ejemplo, un script SSH o un script de despliegue para tu proveedor de alojamiento.
          echo "Desplegando CyberMusik..."
